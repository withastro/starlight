---
import type { InferGetStaticPropsType } from 'astro';
import VirtualPage, {
	makeVirtualStaticPaths,
	type VirtualPageProps,
} from '@astrojs/starlight/components/VirtualPage.astro';

import { getThings } from './things';
import heroStar from './hero-star.webp';

export const { getStaticPaths } = makeVirtualStaticPaths(async ({ getLocalizedSlugs }) => {
	return getThings()
		.map((thing) => {
			// Generate all the localized routes for the page
			return getLocalizedSlugs(`virtual-pages-demo/${thing}`).map(({ slug, lang }) => {
				return {
					params: {
						virtualPagesDemoSlug: slug,
					},
					props: {
						// Pass down the generated slug and the thing to the page
						slug,
						thing,
						// Pass down the lang of the page
						lang,
					},
				};
			});
		})
		.flat();
});

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { slug, thing, lang } = Astro.props;

// Generates the props for the virtual page
function getVirtualPageProps(): VirtualPageProps {
	const isThingB = thing === 'b';
	const isThingC = thing === 'c';
	const isThingD = thing === 'd';
	const isThingE = thing === 'e';

	const title = `Virtual Pages Demo: ${thing}`;

	if (isThingD) {
		// Page with minimal set of props.
		return { slug, title };
	} else if (isThingE) {
		// Page with the `splash` template, a hero including an image and a banner.
		return {
			banner: { content: 'This is a banner' },
			hero: {
				title: 'Hello',
				tagline: 'This is a tagline',
				image: {
					alt: 'A star from a plugin',
					file: heroStar,
				},
			},
			slug,
			title,
		};
	}

	// Other pages with some other props modified for testing.
	const props: VirtualPageProps = {
		dir: isThingB ? 'rtl' : 'ltr',
		hasSidebar: !isThingB,
		lang: 'en',
		slug,
		tableOfContents: isThingC ? { maxHeadingLevel: 4, minHeadingLevel: 2 } : false,
		title,
	};

	if (isThingC) {
		props.headings = [
			{ depth: 2, slug: 'thing-a', text: 'Hello 2' },
			{ depth: 3, slug: 'thing-a', text: 'Hello 3' },
			{ depth: 4, slug: 'thing-a', text: 'Hello 4' },
		];
		props.sidebar = [
			{
				type: 'group',
				label: 'All the links',
				entries: [
					{
						type: 'link',
						label: 'Custom link 2',
						href: '/getting-started/',
						isCurrent: false,
						badge: { text: 'Wow', variant: 'danger' },
						attrs: {},
					},
				],
				collapsed: false,
				badge: undefined,
			},
		];
	}

	return props;
}

// This plugin is only available in English and French.
const isFallback = lang !== 'en' && lang !== 'fr';
---

<VirtualPage {...getVirtualPageProps()} {isFallback}>
	<div>
		{lang === 'fr' ? "Contenu provenant d'un plugin :" : 'some content from a plugin:'}
		{thing}
	</div>
</VirtualPage>
