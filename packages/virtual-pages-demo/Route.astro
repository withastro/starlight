---
import type { InferGetStaticPropsType } from 'astro';
import VirtualPage, {
	type VirtualPageProps,
} from '@astrojs/starlight/components/VirtualPage.astro';
import { getThings } from './things';

export function getStaticPaths() {
	return getThings().map((thing) => {
		const slug = `virtual-pages-demo/${thing}`;
		return {
			params: {
				// Generate the routes:
				//  - /virtual-pages-demo/a/
				//  - /virtual-pages-demo/b/
				//  - /virtual-pages-demo/c/
				virtualPagesDemoSlug: slug,
			},
			props: {
				// Pass down the generated slug and the thing to the page
				slug,
				thing,
			},
		};
	});
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { slug, thing } = Astro.props;

// Generates the props for the virtual page
function getVirtualPageProps() {
	const isThingB = thing === 'b';
	const isThingC = thing === 'c';

	// TODO(HiDeoo) Add an example with the minimal props required

	const props: VirtualPageProps = {
		dir: isThingB ? 'rtl' : 'ltr',
		hasSidebar: !isThingB,
		lang: 'en',
		slug,
		tableOfContents: isThingC ? { maxHeadingLevel: 4, minHeadingLevel: 2 } : false,
		title: `Virtual Pages Demo: ${thing}`,
	};

	if (isThingC) {
		props.headings = [
			{ depth: 2, slug: 'thing-a', text: 'Hello 2' },
			{ depth: 3, slug: 'thing-a', text: 'Hello 3' },
			{ depth: 4, slug: 'thing-a', text: 'Hello 4' },
		];
		props.sidebar = [
			{
				type: 'group',
				label: 'All the links',
				entries: [
					{
						type: 'link',
						label: 'Custom link 2',
						href: '/getting-started/',
						isCurrent: false,
						badge: { text: 'Wow', variant: 'danger' },
						attrs: {},
					},
				],
				collapsed: false,
				badge: undefined,
			},
		];
	}

	return props;
}
---

<VirtualPage {...getVirtualPageProps()}>
	<div>some content from a plugin: {thing}</div>
</VirtualPage>
