---
import type { Props } from '../props';

import MobileMenuFooter from 'virtual:starlight/components/MobileMenuFooter';
import { getSidebarHash } from '../utils/navigation';
import SidebarSublist from './SidebarSublist.astro';

const { sidebar } = Astro.props;
const hash = getSidebarHash(sidebar);
---

<sl-sidebar-state-persist data-hash={hash}>
	<SidebarSublist sublist={sidebar} />
</sl-sidebar-state-persist>
<div class="md:sl-hidden">
	<MobileMenuFooter {...Astro.props} />
</div>

{
	/*
		Inline script to restore sidebar state as soon as possible.
		- On smaller viewports, restoring state is skipped as the sidebar is collapsed inside a menu.
		- The state is parsed from session storage and restored.
		- This is a progressive enhancement, so any errors are swallowed silently.
	*/
}
<script is:inline>
	(() => {
		try {
			if (!matchMedia('(min-width: 50em)').matches) return;
			const scroller = document.getElementById('starlight__sidebar');
			/** @type {HTMLElement | null} */
			const target = document.querySelector('sl-sidebar-state-persist');
			const state = JSON.parse(sessionStorage.getItem('sl-sidebar-state') || '0');
			if (!scroller || !target || !state || target.dataset.hash !== state.hash) return;
			target
				.querySelectorAll('details')
				.forEach((el, idx) => typeof state.open[idx] === 'boolean' && (el.open = state.open[idx]));
			scroller.scrollTop = state.scroll;
		} catch {}
	})();
</script>
<style>
	sl-sidebar-state-persist {
		display: contents;
	}
</style>
