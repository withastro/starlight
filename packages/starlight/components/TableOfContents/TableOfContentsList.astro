---
import type { generateToC } from './generateToC';

interface Props {
  toc: ReturnType<typeof generateToC>;
  depth?: number;
}

const { toc, depth = 0 } = Astro.props;
---

<ul>
  {
    toc.map((heading) => (
      <li>
        <a href={'#' + heading.slug}>{heading.text}</a>
        {heading.children.length > 0 && (
          <Astro.self toc={heading.children} depth={depth + 1} />
        )}
      </li>
    ))
  }
</ul>

<style define:vars={{ depth }}>
  ul {
    padding: 0;
  }
  a {
    display: block;
    padding-inline: calc(1rem * var(--depth) + var(--toc-pad-inline, 0rem))
      var(--toc-pad-inline, 0rem);
  }
  ul :global(::marker) {
    color: transparent;
  }
</style>
