---
import type { Props } from '../props';

// Built-in CSS styles.
import '../style/props.css';
import '../style/reset.css';
import '../style/shiki.css';
import '../style/util.css';

// Components â€” can override built-in CSS, but not user CSS.
import Banner from 'virtual:starlight/components/Banner';
import ContentPanel from 'virtual:starlight/components/ContentPanel';
import FallbackContentNotice from 'virtual:starlight/components/FallbackContentNotice';
import DraftContentNotice from 'virtual:starlight/components/DraftContentNotice';
import Footer from 'virtual:starlight/components/Footer';
import Header from 'virtual:starlight/components/Header';
import Hero from 'virtual:starlight/components/Hero';
import MarkdownContent from 'virtual:starlight/components/MarkdownContent';
import PageFrame from 'virtual:starlight/components/PageFrame';
import PageSidebar from 'virtual:starlight/components/PageSidebar';
import PageTitle from 'virtual:starlight/components/PageTitle';
import Sidebar from 'virtual:starlight/components/Sidebar';
import SkipLink from 'virtual:starlight/components/SkipLink';
import TwoColumnContent from 'virtual:starlight/components/TwoColumnContent';
import Layout from './Layout.astro';

// Remark component CSS (needs to override `MarkdownContent.astro`)
import '../style/asides.css';

const pagefindEnabled =
	Astro.props.entry.slug !== '404' &&
	!Astro.props.entry.slug.endsWith('/404') &&
	Astro.props.entry.data.pagefind !== false;
---

<Layout {...Astro.props}>
	<style slot="head">
		html:not([data-has-toc]) {
			--sl-mobile-toc-height: 0rem;
		}
		html:not([data-has-sidebar]) {
			--sl-content-width: 67.5rem;
		}
		/* Add scroll padding to ensure anchor headings aren't obscured by nav */
		html {
			/* Additional padding is needed to account for the mobile TOC */
			scroll-padding-top: calc(1.5rem + var(--sl-nav-height) + var(--sl-mobile-toc-height));
		}
		main {
			padding-bottom: 3vh;
		}
		@media (min-width: 50em) {
			[data-has-sidebar] {
				--sl-content-inline-start: var(--sl-sidebar-width);
			}
		}
		@media (min-width: 72em) {
			html {
				scroll-padding-top: calc(1.5rem + var(--sl-nav-height));
			}
		}
	</style>
	<SkipLink {...Astro.props} />
	<PageFrame {...Astro.props}>
		<Header slot="header" {...Astro.props} />
		{Astro.props.hasSidebar && <Sidebar slot="sidebar" {...Astro.props} />}
		<script src="./SidebarPersistState"></script>
		<TwoColumnContent {...Astro.props}>
			<PageSidebar slot="right-sidebar" {...Astro.props} />
			<main
				data-pagefind-body={pagefindEnabled}
				lang={Astro.props.entryMeta.lang}
				dir={Astro.props.entryMeta.dir}
			>
				{/* TODO: Revisit how this logic flows. */}
				<Banner {...Astro.props} />
				{
					Astro.props.entry.data.hero ? (
						<ContentPanel {...Astro.props}>
							<Hero {...Astro.props} />
							<MarkdownContent {...Astro.props}>
								<slot />
							</MarkdownContent>
							<Footer {...Astro.props} />
						</ContentPanel>
					) : (
						<>
							<ContentPanel {...Astro.props}>
								<PageTitle {...Astro.props} />
								{Astro.props.entry.data.draft && <DraftContentNotice {...Astro.props} />}
								{Astro.props.isFallback && <FallbackContentNotice {...Astro.props} />}
							</ContentPanel>
							<ContentPanel {...Astro.props}>
								<MarkdownContent {...Astro.props}>
									<slot />
								</MarkdownContent>
								<Footer {...Astro.props} />
							</ContentPanel>
						</>
					)
				}
			</main>
		</TwoColumnContent>
	</PageFrame>
</Layout>
