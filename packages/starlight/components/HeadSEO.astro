---
import type { CollectionEntry } from 'astro:content';
import config from 'virtual:starlight/user-config';
import { localizedUrl } from '../utils/localizedUrl';

interface Props {
  data: CollectionEntry<'docs'>['data'];
  lang: string;
}

const { data, lang } = Astro.props;

const canonical = Astro.site
  ? new URL(Astro.url.pathname, Astro.site)
  : undefined;
const title = data.title || config.title;
const description = data.description || config.description;
---

<title>{title}</title>
{description && <meta name="description" content={description} />}
<link rel="canonical" href={canonical} />
{
  canonical &&
    config.isMultilingual &&
    Object.entries(config.locales).map(
      ([locale, localeOpts]) =>
        localeOpts && (
          <link
            rel="alternate"
            hreflang={localeOpts.lang}
            href={localizedUrl(canonical, locale)}
          />
        )
    )
}
<meta name="generator" content={Astro.generator} />
<link
  rel="shortcut icon"
  href={import.meta.env.BASE_URL + 'favicon.svg'}
  type="image/svg+xml"
/>

<!-- OpenGraph Tags -->
<meta property="og:title" content={title} />
<meta property="og:type" content="article" />
<meta property="og:url" content={canonical} />
<meta property="og:locale" content={lang} />
<meta property="og:description" content={description} />
<meta property="og:site_name" content={config.title} />

<!-- Twitter Tags -->
<meta name="twitter:card" content="summary_large_image" />
{
  config.social?.twitter && (
    <meta name="twitter:site" content={config.social.twitter} />
  )
}
<meta name="twitter:title" content={title} />
<meta name="twitter:description" content={description} />
