---
import config from 'virtual:starlight/user-config';
import Icon from '../user-components/Icon.astro';

type Platform = keyof NonNullable<typeof config.social>;

const labels: Record<Platform, string> = {
  github: 'GitHub',
  discord: 'Discord',
  twitter: 'Twitter',
  mastodon: 'Mastodon',
  codeberg: 'Codeberg',
  youtube: 'YouTube',
  threads: 'Threads',
  linkedin: 'LinkedIn',
  twitch: 'Twitch',
};

const links = Object.entries(config.social || {}).filter(
  ([key, url]) => Boolean(url) && key != 'additional'
) as [platform: Platform, url: string][];

const additionalLinks = config.social?.additional;
---

{
  links.length > 0 && (
    <>
      {links.map(([platform, url]) => (
        <a href={url} rel="me">
          <span class="sr-only">{labels[platform]}</span>
          <Icon name={platform} />
        </a>
      ))}
      {additionalLinks &&
        additionalLinks.map((link) => (
          <a href={link.url} rel="me">
            <span class="sr-only">{link.displayName}</span>
            <svg
              width="16"
              height="16"
              viewBox="0 0 24 24"
              fill="currentColor"
              set:html={link.icon}
            />
          </a>
        ))}
      <div class="divider" />
    </>
  )
}

<style>
  a {
    display: flex;
    color: var(--sl-color-text-accent);
  }
  a:hover {
    opacity: 0.66;
  }
  .divider {
    height: 2rem;
    border-inline-end: 1px solid var(--sl-color-gray-5);
  }
</style>
