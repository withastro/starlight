---
import { AstroError } from 'astro/errors';
import Icon from './Icon.astro';
import { AsideDefaultIcons, type StarlightIcon } from '../utils/icons';
import { AsideVariants, isAsideVariant, type AsideVariant } from '../integrations/asides';

interface Props {
	type?: AsideVariant;
	title?: string;
	icon?: StarlightIcon;
}

let { type = 'note', title, icon } = Astro.props;

if (!isAsideVariant(type)) {
	throw new AstroError(
		'Invalid `type` prop passed to the `<Aside>` component.\n',
		`Received: ${JSON.stringify(type)}\n` +
			`Expected one of ${AsideVariants.map((i) => JSON.stringify(i)).join(', ')}`
	);
}

if (!title) {
	title = Astro.locals.t(`aside.${type}`);
}
---

<aside aria-label={title} class={`starlight-aside starlight-aside--${type}`}>
	<p class="starlight-aside__title" aria-hidden="true">
		<Icon name={icon ?? AsideDefaultIcons[type]} class="starlight-aside__icon" />{title}
	</p>
	<div class="starlight-aside__content">
		<slot />
	</div>
</aside>
