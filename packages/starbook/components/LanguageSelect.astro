---
import config from 'virtual:starbook/user-config';
import { localizedUrl } from '../utils/localizedUrl';
import Select from './Select.astro';

interface Props {
  locale: string | undefined;
}

/**
 * Get the equivalent of the current page path for the passed locale.
 */
function localizedPathname(locale: string | undefined): string {
  return localizedUrl(Astro.url, locale).pathname;
}
---

{
  config.isMultilingual && (
    <starbook-lang-select>
      <Select
        icon="translate"
        label="Select language"
        value={localizedPathname(Astro.props.locale)}
        options={Object.entries(config.locales).map(([code, locale]) => ({
          value: localizedPathname(code),
          selected: code === Astro.props.locale,
          label: locale!.label,
        }))}
        width="7em"
      />
    </starbook-lang-select>
  )
}

<script>
  class StarBookLanguageSelect extends HTMLElement {
    constructor() {
      super();
      const select = this.querySelector('select');
      if (select) {
        select.addEventListener('change', (e) => {
          if (e.currentTarget instanceof HTMLSelectElement) {
            window.location.pathname = e.currentTarget.value;
          }
        });
      }
    }
  }
  customElements.define('starbook-lang-select', StarBookLanguageSelect);
</script>
