---
import config from 'virtual:starbook/user-config';
import { localizedUrl } from '../utils/localizedUrl';

interface Props {
  locale: string | undefined;
}

/**
 * Get the equivalent of the current page path for the passed locale.
 */
function localizedPathname(locale: string | undefined): string {
  return localizedUrl(Astro.url, locale).pathname;
}
---

{
  config.locales && Object.keys(config.locales).length > 1 && (
    <label>
      <span class="sr-only">Select language</span>
      <svg
        width="1.25em"
        height="1.25em"
        viewBox="0 0 88.6 77.3"
        focusable="false"
        aria-hidden="true"
        role="img"
      >
        <path
          fill="currentColor"
          d="M61 24.6h7.9l18.7 51.6h-7.7l-5.4-15.5H54.3l-5.6 15.5h-7.2L61 24.6zM72.6 55l-8-22.8L56.3 55h16.3z"
        />
        <path
          fill="currentColor"
          d="M53.6 60.6c-10-4-16-9-22-14 0 0 1.3 1.3 0 0-6 5-20 13-20 13l-4-6c8-5 10-6 19-13-2.1-1.9-12-13-13-19h8c4 9 10 14 10 14 10-8 10-19 10-19h8s-1 13-12 24c5 5 10 9 19 13l-3 7zm-52-44h56v-8h-23v-7h-9v7h-24v8z"
        />
      </svg>
      <starbook-lang-select>
        <select value={localizedPathname(Astro.props.locale)}>
          {Object.entries(config.locales).map(([code, locale]) => (
            <option
              value={localizedPathname(code)}
              selected={code === Astro.props.locale}
            >
              {locale!.label}
            </option>
          ))}
        </select>
      </starbook-lang-select>
    </label>
  )
}

<script>
  class StarBookLanguageSelect extends HTMLElement {
    constructor() {
      super();
      this.querySelector('select')?.addEventListener('change', (e) => {
        if (e.currentTarget instanceof HTMLSelectElement) {
          window.location.pathname = e.currentTarget.value;
        }
      });
    }
  }
  customElements.define('starbook-lang-select', StarBookLanguageSelect);
</script>

<style>
  label {
    display: flex;
    align-items: center;
    gap: 0.25rem;
  }

  select {
    border: 0;
    padding-block: 0.625rem;
    width: 5.5rem;
    background-color: transparent;
    text-overflow: ellipsis;
  }
</style>
