---
import type { GetStaticPathsResult, InferGetStaticPropsType } from 'astro';
import { getCollection } from 'astro:content';
import config from 'virtual:starbook/user-config';

import './style/props.css';
import './style/reset.css';
import './style/util.css';

import Header from './components/Header.astro';
import Sidebar from './components/Sidebar.astro';
import TableOfContents from './components/TableOfContents.astro';
import { generateToC } from './components/TableOfContents/generateToC';
import {
  slugToDir,
  slugToLang,
  slugToLocale,
  slugToParam,
} from './utils/slugs';
import HeadSEO from './components/HeadSEO.astro';
import LastUpdated from './components/LastUpdated.astro';
import EditLink from './components/EditLink.astro';
import { getPrevNextLinks, getSidebar } from './utils/navigation';
import PrevNextLinks from './components/PrevNextLinks.astro';

import 'virtual:starbook/user-css';
import Layout from './components/Layout.astro';
import RightSidebarPanel from './components/RightSidebarPanel.astro';
import ContentPanel from './components/ContentPanel.astro';
import MarkdownContent from './components/MarkdownContent.astro';

export async function getStaticPaths() {
  const docs = await getCollection('docs');

  return docs.map((doc) => ({
    params: { slug: slugToParam(doc.slug) },
    props: doc,
  })) satisfies GetStaticPathsResult;
}

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { render, data, slug, id } = Astro.props;
const { Content, headings } = await render();
const lang = slugToLang(slug);
const locale = slugToLocale(slug);
const dir = slugToDir(slug);
const sidebar = getSidebar(Astro.url.pathname, locale);
const prevNextLinks = getPrevNextLinks(sidebar);
---

<html lang={lang} dir={dir}>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <HeadSEO data={data} lang={lang} />
  </head>
  <body>
    <Layout>
      <Header slot="header" locale={locale} />
      <Sidebar slot="sidebar" sidebar={sidebar} locale={locale} />
      <Fragment slot="right-sidebar">
        <RightSidebarPanel>
          <TableOfContents
            toc={generateToC(headings, config.tableOfContents)}
          />
        </RightSidebarPanel>
        <RightSidebarPanel>
          <h2>Contribute</h2>
          <EditLink data={data} id={id} />
        </RightSidebarPanel>
      </Fragment>
      <main id="starbook__overview" data-pagefind-body>
        <ContentPanel>
          <h1
            style="font-size: var(--sb-text-h1); font-weight: 600; color: var(--sb-color-white);"
          >
            {data.title}
          </h1>
        </ContentPanel>
        <ContentPanel>
          <MarkdownContent><Content /></MarkdownContent>
          <footer>
            <PrevNextLinks {...prevNextLinks} />
            <LastUpdated id={id} lang={lang} />
          </footer>
        </ContentPanel>
      </main>
    </Layout>
  </body>
</html>
